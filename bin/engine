#!/bin/bash
if [[ $(which docker.exe) ]]; then
    DOCKEREXE=.exe
else
    DOCKEREXE=
fi

cd $(dirname $(realpath $0))
cd ..

down() {
    docker-compose${DOCKEREXE} down -v
}

up() {
    docker-compose${DOCKEREXE} up -d
}

config_build() {
    docker${DOCKEREXE} build ./ -f etc/img/config.Dockerfile -t engine-config:latest --no-cache
}

start() {
    docker-compose${DOCKEREXE} start
}

stop() {
    docker-compose${DOCKEREXE} stop
}

case "$1" in
        bash)
            if [ -z "$3" ]
            then
                docker$DOCKEREXE exec -i engine_$2_1 /bin/bash -c 'cd /sites; exec "${SHELL:-sh}"; $2'
            else
                docker$DOCKEREXE exec -i engine_$2_1 $3
            fi
            ;;
         
        log)
            docker-compose${DOCKEREXE} logs -f
            ;;

        tests)
            bin/tests $2
            ;;
        
        start)
            start
            ;;

        stop)
            stop
            ;;

        config)
            config_build
            docker${DOCKEREXE} run engine-config:latest python -- /app/index.py > docker-compose.yml
            ;;

        config-bash)
            docker${DOCKEREXE} run -it engine-config:latest bash
            ;;

        config-reload)
            docker-compose${DOCKEREXE} build --no-cache web
            up
            ;;

        build)
            config_build
    	    docker-compose${DOCKEREXE} build --no-cache
            ;;

        down)
    	    down
            ;;

        up)
            down
            config
	        up
            ;;

        download-cli-tools)
            FILES=./etc/cli-tools/*
            for f in $FILES
            do
                echo "Fetching $(basename ${f%.*})..."
                $(cat $f) > ./var/cli-tools/$(basename ${f%.*})
            done
            ;;

        *)
            cat etc/banner.txt
            echo $"Usage: $0 {start|stop|restart|condrestart|status}"
            exit 1
esac