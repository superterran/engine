#!/bin/bash
source bin/_helpers.sh

if [ -x "$(command -v realpath)" ]; then
    cd $(dirname $(realpath $0))
    cd ..
fi

down() {
    docker-compose${DOCKEREXE} -f ./tmp/docker-compose.yml down -v
}

up() {
    docker-compose${DOCKEREXE} -f ./tmp/docker-compose.yml up -d
}

config_build() {
    docker${DOCKEREXE} build ./ -f etc/img/config.Dockerfile -t engine-config:latest --no-cache
    docker${DOCKEREXE} run engine-config:latest python -- /app/index.py > ./tmp/docker-compose.yml
    docker${DOCKEREXE} run engine-config:latest python -- /app/nginx.py > ./tmp/nginx.conf
    docker-compose${DOCKEREXE} build --no-cache -f ./tmp/docker-compose.yml web
}

start() {
    docker-compose${DOCKEREXE} -f ./tmp/docker-compose.yml start
}

stop() {
    docker-compose${DOCKEREXE} -f ./tmp/docker-compose.yml stop
}

case "$1" in
        bash)
            if [ -z "$3" ]
            echo -e "Connecting to bash instance of the \e[1m$2\033[0m container..."
            then
                if [ ! $DOCKEREXE ]
                then 
                    docker$DOCKEREXE exec -it engine_$2_1 /bin/bash -c 'cd /sites; exec "${SHELL:-sh}"; $2'
                else 
                    docker$DOCKEREXE exec -i engine_$2_1 /bin/bash -c 'cd /sites; exec "${SHELL:-sh}"; $2'
                fi
            else
                if [ ! $DOCKEREXE ]
                then 
                     docker$DOCKEREXE exec -it engine_$2_1 $3
                else 
                     docker$DOCKEREXE exec -i engine_$2_1 $3
                fi
            fi
            ;;
         
        log)
            docker-compose${DOCKEREXE} -f ./tmp/docker-compose.yml logs -f
            ;;

        test)
            config_build
            up
            bin/tests $2
            ;;
        
        start)
            start
            ;;

        stop)
            stop
            ;;

        config-build)
            echo ''
            echo 'Building engine composition from'
            config_build
            ;;

        config-bash)
            docker${DOCKEREXE} run -it engine-config:latest bash
            ;;

        config-reload)
            docker-compose${DOCKEREXE} -f ./tmp/docker-compose.yml build --no-cache web
            up
            ;;

        build)
            config_build
    	    docker-compose${DOCKEREXE} -f ./tmp/docker-compose.yml build --no-cache
            ;;

        down)
    	    down
            ;;

        up)
            down
            config_build
	        up
            ;;

        download-cli-tools)
            FILES=./etc/cli-tools/*
            for f in $FILES
            do
                echo "Fetching $(basename ${f%.*})..."
                $(cat $f) > ./var/cli-tools/$(basename ${f%.*})
            done
            ;;

        *)
            cat etc/banner.txt
            echo $"Usage: $0 {start|stop|restart|condrestart|status}"
            exit 1
esac